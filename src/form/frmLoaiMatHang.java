/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import CRUD.LoaiMatHangCRUD;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import java.util.List;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.LoaiMatHang;
import model.NhanVien;
import model.NhanVienSession;


/**
 *
 * @author WitherDragon
 */
public class frmLoaiMatHang extends javax.swing.JFrame {
    private List<LoaiMatHang> loaiMatHangs;
    private LoaiMatHangCRUD loaiMatHangCRUD;
    private ButtonColumn buttonColumn;
    private DocumentListener textChangeListener;
    private static NhanVienSession currentNhanVien;
    /**
     * Creates new form frmLoaiMatHang
     */
    public frmLoaiMatHang(NhanVienSession loginNhanVien) {
        initComponents();
        loaiMatHangCRUD=new LoaiMatHangCRUD();
        frmLoaiMatHang.currentNhanVien=loginNhanVien;
        renderTableNhanVien();
        TextChangeEvent();
        btnThem.setEnabled(false);
        btnSua.setEnabled(false);
    }
    private void refresh(){
        txtMaLoai.setText("");
        txtTenLoai.setText("");
        loaiMatHangs=loaiMatHangCRUD.getAll();
        loadTable();     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbLoaiMatHang = new javax.swing.JTable();
        txtMaLoai = new javax.swing.JTextField();
        txtTenLoai = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnTroVe = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbLoaiMatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Vô hiệu hoá", "Mã loại", "Tên loại mặt hàng", "Xoá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbLoaiMatHang);

        txtMaLoai.setEditable(false);

        jLabel1.setText("Mã loại");

        jLabel2.setText("Tên loại mặt hàng");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnHuy.setText("Huỷ");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");

        btnTroVe.setText("Trở về");
        btnTroVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTroVeMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnTroVe);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void TextChangeEvent(){
        textChangeListener = new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateTextFields();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateTextFields();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateTextFields();
            }
            private void updateTextFields(){
                if(txtMaLoai.getText().isEmpty()){
                    btnSua.setEnabled(false);
                    if(txtTenLoai.getText().isEmpty())
                        btnThem.setEnabled(false);
                    else
                        btnThem.setEnabled(true);
                }
                else{
                    btnThem.setEnabled(false);
                    if(txtTenLoai.getText().isEmpty())
                        btnSua.setEnabled(false);
                    else
                        btnSua.setEnabled(true);
                }                    
            }
        };
        txtMaLoai.getDocument().addDocumentListener(textChangeListener);
        txtTenLoai.getDocument().addDocumentListener(textChangeListener);
    }
    
    
    private void btnTroVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTroVeMouseClicked
        frmSanPham sp=new frmSanPham(currentNhanVien);
        sp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTroVeMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        LoaiMatHang newLoaiMatHang=new LoaiMatHang();
        newLoaiMatHang.setMaLoaiHang("");
        newLoaiMatHang.setTenLoai(txtTenLoai.getText());
        if(loaiMatHangCRUD.addLoaiMatHang(newLoaiMatHang))
        {
            JOptionPane.showMessageDialog(null, "Thêm mới thành công");
            refresh();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Có lỗi xảy ra");
        }
        
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        refresh();
    }//GEN-LAST:event_btnHuyActionPerformed
    private void renderTableNhanVien(){
        loaiMatHangs=loaiMatHangCRUD.getAll();
        loadTable();
        tbLoaiMatHang.setRowSelectionAllowed(false);
        clickLastColumnCell();
        tbLoaiMatHang.setRowHeight(40);
        Icon deleteIcon = new  ImageIcon("src\\icons\\delete.png");
        buttonColumn=new ButtonColumn(tbLoaiMatHang, tbLoaiMatHang.getColumnCount() - 1,deleteIcon);
    }
    private void clickLastColumnCell(){
        
        tbLoaiMatHang.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tbLoaiMatHang.rowAtPoint(e.getPoint());
                int column = tbLoaiMatHang.columnAtPoint(e.getPoint());
                if (column == tbLoaiMatHang.getColumnCount() - 1) {
                    
                    int selectedRow = tbLoaiMatHang.convertRowIndexToModel(row);
                    Object idLMH = tbLoaiMatHang.getModel().getValueAt(selectedRow, 1);
                    int result = JOptionPane.showConfirmDialog(
                            null,
                            "Bạn có chắc muốn xoá loại mặt hàng này? ",
                            "Xác nhận",
                            JOptionPane.YES_NO_OPTION);

                    if (result == JOptionPane.YES_OPTION)
                    {
                        if(loaiMatHangCRUD.xoaLoaiMatHang(idLMH.toString())){
                            JOptionPane.showMessageDialog(null, "Vô hiệu hoá loại mặt hàng thành công");
                            refresh();
                        }  
                    }
                
                }

            }
        });
    }
    private void loadTable() {
        DefaultTableModel model = (DefaultTableModel) tbLoaiMatHang.getModel();
        model.setRowCount(0); 
        for (LoaiMatHang loai : loaiMatHangs) {
            boolean vhh=loai.isVoHieuHoa();
            String maNV = loai.getMaLoaiHang();
            String tenNV = loai.getTenLoai();
            model.addRow(new Object[]{vhh, maNV, tenNV});
        }
        createTableRowClick();
    }
    private void createTableRowClick(){
        tbLoaiMatHang.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e) {

                int selectedRow = tbLoaiMatHang.getSelectedRow();
                if(selectedRow < 0 || selectedRow == 6)
                    return;
                if (selectedRow >= 0) {
                    LoaiMatHang selectedLoaiMatHang = loaiMatHangs.get(selectedRow);
                    txtMaLoai.setText(selectedLoaiMatHang.getMaLoaiHang());
                    txtTenLoai.setText(selectedLoaiMatHang.getTenLoai());
                }
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLoaiMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLoaiMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLoaiMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLoaiMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLoaiMatHang(currentNhanVien).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JMenu btnTroVe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbLoaiMatHang;
    private javax.swing.JTextField txtMaLoai;
    private javax.swing.JTextField txtTenLoai;
    // End of variables declaration//GEN-END:variables
}
